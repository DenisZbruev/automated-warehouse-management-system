#include <iarduino_IR_TX.h> // Подключаем библиотеку для работы с ИК-передатчиком     
#include <EEPROM.h>
iarduino_IR_TX VS(9);
#include <SPI.h>                                          // Подключаем библиотеку  для работы с шиной SPI
#include <nRF24L01.h>                                     // Подключаем файл настроек из библиотеки RF24
#include <RF24.h>                                         // Подключаем библиотеку  для работы с nRF24L01+                                   
RF24           radio(10, 8);  //CE, CSN 
 int data[1];//массив приема/передачи данных из одного элемента
struct LED
{
  int num_led;//номер светодиода, который собственно и посылает сигнал
  int num_sig;//номер сигнала, отправляемого светодиодом (ну и принимаемого передатчиком соответственно)
  //int rotate;//отвечает за поворот или не поворот после отработки кода из главного свитч
};
struct pin
{
  int pin_num;
  int led_num;
};

int radio_p=150;
// Объявляем объект VD, с указанием вывода к которому подключён ИК-передатчик
struct pin pin_array[46];// на случай ардуино мега, тупо статический массив 

void setup()
{
Serial.begin(9600);

for (int j=0; j<46; j++)
{
    pin_array[j].pin_num=0;
    pin_array[j].led_num=0;
}

  VS.begin();
 radio.begin();                                        // Инициируем работу nRF24L01+
 radio.setChannel(7);                                  // Указываем канал передачи данных (от 0 до 127), 5 - значит передача данных осуществляется на частоте 2,405 ГГц (на одном канале может быть только 1 приёмник и до 6 передатчиков)
 radio.setDataRate     (RF24_250KBPS);                   // Указываем скорость передачи данных (RF24_250KBPS, RF24_1MBPS, RF24_2MBPS), RF24_1MBPS - 1Мбит/сек
 radio.setPALevel      (RF24_PA_HIGH);                 // Указываем мощность передатчика (RF24_PA_MIN=-18dBm, RF24_PA_LOW=-12dBm, RF24_PA_HIGH=-6dBm, RF24_PA_MAX=0dBm)
}
void ReadData()
{
  radio.openReadingPipe(1, 0xF0F0F0F0AA); // Какой канал считывать, 40-разрядный адрес
  radio.startListening();                 // Остановить передачу и начать прием
  
  if ( radio.available()) //если данные пришли - это чисто считывание данных
  {
    while (radio.available())
    {
      radio.read(&data, sizeof(data));
    }
    Serial.print("\nReceived:");
    Serial.println(data[0]);
  }
}

void WriteData()
{
  radio.stopListening();              //Остановить прием и начать передачу
  radio.openWritingPipe(0xF0F0F0F0AA);//Отправить данные на этот 40-разрядный адрес, 0xF0F0F0F066
  radio.write(&data, sizeof(data)); 
  Serial.print("\nSent:");
  Serial.println(data[0]);
  delay(10);//задержка не нужна, оставим 10 (было 300)
}
void loop()
{
struct LED led_array[10];//с запасом

bool change_rotate=false;
int c=1, value, f=1, val, v;//sig-номер сигнала, посылаемого светодиодом, led-номер светодиода, rotate-поворот вправо/влево
int i, n1, n2;//n1, n2 в перспективе заменить на массив
int size_signal;
int size_pin_array=0;
int receive_pin_array;//флаг: принимать массив пинов или нет

  while (Serial.available()==0);
  if(Serial.available() > 0)//принимаем размер
  {
    size_pin_array=Serial.read();
  } 
  
 
  
  for(int i=0; i<size_pin_array; i++)//считываем сам массив пинов
  {
    while (Serial.available()==0);
    if(Serial.available() > 0)
    {
      pin_array[i].pin_num=Serial.read();
    }
    while (Serial.available()==0);
    if(Serial.available() > 0)
    {
      pin_array[i].led_num=Serial.read();
    }
  }  


  
while (Serial.available()==0);//начало блока приема массива СИГНАЛОВ
if(Serial.available() > 0)
{
  size_signal=Serial.read();
}
for (int i=0; i<size_signal; i++)//запись в массив
{
  while (Serial.available()==0);
  if(Serial.available() > 0)
  {
    led_array[i].num_led=Serial.read();
  }
  while (Serial.available()==0);
  if(Serial.available() > 0)
  {
    led_array[i].num_sig=Serial.read();
  }
}//конец блока приема массива СИГНАЛОВ



for(int i=0; i<size_pin_array; i++)//
{
  pinMode(pin_array[i].pin_num, OUTPUT);
}


for (int i=0; led_array[i].num_led!=0; i++)//главний цикл всей программы 
{
  
  int j;
  for (j=0; led_array[i].num_led!=pin_array[j].led_num; j++)
  {
    digitalWrite(pin_array[j].pin_num, HIGH);
  }
  digitalWrite(pin_array[j].pin_num, LOW);
  j++;
  for (; j<size_pin_array; j++)
  {
    digitalWrite(pin_array[j].pin_num, HIGH);
  }
  f=1;
  c=1;
  
 
  switch (led_array[i].num_sig)//        
  {
  case 1:
        
        ReadData();
        value=data[0];
        if (value<10){
        Serial.println(value);
        
        if (value==1)

          c=0;         

        }
 
    while (c==1)
    {
        ReadData();
        value=data[0];
        if (value<10){
        Serial.println(value);
        if (value==1)
        {
          c=0;
          break;   
        }
        }
     
    VS.send(0xFFA857);
    }
  break;
  case 2:
        ReadData();
        value=data[0];
        if (value<10){
        Serial.println(value);
        
        if (value==2)

          c=0;         

        }
      
    while (c==1)
    {
   
        ReadData();
        value=data[0];
        if (value<10){
        Serial.println(value);
        if (value==2)
        {
          c=0;
          break;   
        }
        }
     
    VS.send(0xFFE01F);
    }//конец цикла
  break;
  case 3:
   
      
        ReadData();
        value=data[0];
        if (value<10){
        Serial.println(value);
        
        if (value==3)

          c=0;         

        }
       
    while (c==1)
    {
   
        ReadData();
        value=data[0];
        if (value<10){
        Serial.println(value);
        if (value==3)
        {
          c=0;
          break;   
        }
        }
      
    VS.send(0xFFA25D);
    }
  break;
  case 4:
   
    while (c==1)
    {
    //if( mySwitch.available() )
    //{//прием сигнала с погрузчика
        //value = mySwitch.getReceivedValue();
        ReadData();
        value=data[0];
        if (value<10){
        Serial.println(value);
        if (value==4)
        {
          data[0]=0;
          value=0;
          c=0;
          break;   
        }
        }
        
    
    VS.send(0xFFA995);//1-оставляем как есть(с повторами). Или учимся вообще его отключать(или, как вариант, вместо него другой ик-светодиод включать), FF500
    }//конец цикла
  break;
  case 5:
    
    while (c==1)
    {
   
        ReadData();
        value=data[0];
        if (value<10)
        {
          Serial.println(value);
          if (change_rotate==false)
          {
            if (value==5)
            {
              data[0]=0;
              value=0;
              c=0;
              break;   
            }
          }
          if (change_rotate==true)
          {
            if (value==7)
            {
             data[0]=0;
              value=0;
              c=0;
              break;   
            }
          }
        }
        
    VS.send(0xFEE265);//1-оставляем как есть(с повторами). Или учимся вообще его отключать(или, как вариант, вместо него другой ик-светодиод включать), FF500
    }//конец цикла
  break;
  case 6:
    while (c==1)
    {
      
         data[0]=0;
         ReadData();
         value=data[0];
          if (value<10)
          {
            Serial.println(value);
            if (change_rotate==false)
            {
              if (value==6)
              {
               c=0;
                data[0]=0;
                value=0;
                break;   
              }
            }
            if (change_rotate==true)
            {
              if (value==8)
              {
                c=0;
                data[0]=0;
                value=0;
                break;   
              }
            }
            //этого не было
          }
        
    VS.send(0xFDD54E);//VD1.send(0xFEE265);
    }//конец цикла
    //c=1;//убрать
  break;


  
   case 9:
    //if( mySwitch.available() )
    //{//прием сигнала с погрузчика        ЭТО НАЧАЛО ОДНОЙ ПОЛНОЙ ИТЕРАЦИИ
       // v = mySwitch.getReceivedValue();
        ReadData();
        value=data[0];
        if (value<10){
        Serial.println(value);
        
        if (value==9)
          c=0;         

        }
        
    while (c==1)
    {
    
        ReadData();
        value=data[0];
        if (value<10){
        Serial.println(value);
        if (value==9)
        {
          c=0;
          break;   
        }
        }
       
    VS.send(0xEEF943);
    }//конец цикла
  break;
  case 10:
    //if( mySwitch.available() )
    //{//прием сигнала с погрузчика        ЭТО НАЧАЛО ОДНОЙ ПОЛНОЙ ИТЕРАЦИИ
       // v = mySwitch.getReceivedValue();
        ReadData();
        value=data[0];
        if (value>=10){
        Serial.println(value);
        
        if (value==10)
          c=0;         

        }
       
    while (c==1)
    {
        ReadData();
        value=data[0];
        if (value>=10){
        Serial.println(value);
        if (value==10)
        {
          c=0;
          break;   
        }
        }
       
    VS.send(0xEEF945);
    }//конец цикла
  break;
  case 11:
    
        ReadData();
        value=data[0];
        if (value>10){
        Serial.println(value);
        
        if (value==11)

          c=0;         

        }
    while (c==1)
    {
        ReadData();
        value=data[0];
        if (value>10){
        Serial.println(value);
        if (value==11)
        {
          c=0;
          break;   
        }
        }
    VS.send(0xEEF961);
    }//конец цикла
  break;
   case 12:
        ReadData();
        value=data[0];
        if (value>10){
        Serial.println(value);
        
        if (value==12)

          c=0;         

        }
    while (c==1)
    {
        ReadData();
        value=data[0];
        if (value>10){
        Serial.println(value);
        if (value==12)
        {
          c=0;
          break;   
        }
        }
        //mySwitch.resetAvailable();
    //}//конец приема сигнала с погрузчика
    VS.send(0xEEF941);
    }//конец цикла
  break;
  }
  digitalWrite(7, LOW);//реле
  digitalWrite(6, LOW);//реле
  digitalWrite(2, LOW);
  change_rotate=!change_rotate;
  //delay(5);
  data[0]=0;
  f=1;
  c=1;
  value=0;

}//КОНЕЦ ГЛАВНОГО ЦИКЛА
change_rotate=false;
for(i=0; i<200; i++)
{
  digitalWrite(6, LOW);
  digitalWrite(2, LOW);
  
  digitalWrite(7, HIGH);
  delay(1);
  VS.send(0xFE100);
  delay(5);
}
